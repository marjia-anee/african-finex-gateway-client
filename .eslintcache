[{"D:\\My Projects\\finex-gateway\\src\\index.js":"1","D:\\My Projects\\finex-gateway\\src\\App.js":"2","D:\\My Projects\\finex-gateway\\src\\reportWebVitals.js":"3","D:\\My Projects\\finex-gateway\\src\\pages\\PageOne.js":"4","D:\\My Projects\\finex-gateway\\src\\pages\\PageTwo.js":"5","D:\\My Projects\\finex-gateway\\src\\pages\\PageThree.js":"6","D:\\My Projects\\finex-gateway\\src\\pages\\PageFour.js":"7","D:\\My Projects\\finex-gateway\\src\\pages\\SellOne.js":"8","D:\\My Projects\\finex-gateway\\src\\pages\\SellTwo.js":"9","D:\\My Projects\\finex-gateway\\src\\pages\\SellThree.js":"10","D:\\My Projects\\finex-gateway\\src\\pages\\SellFour.js":"11","D:\\My Projects\\finex-gateway\\src\\pages\\LastPage.js":"12","D:\\My Projects\\finex-gateway\\src\\pages\\Header.js":"13","D:\\My Projects\\finex-gateway\\src\\pages\\Home.js":"14","D:\\My Projects\\finex-gateway\\src\\pages\\Footer.js":"15"},{"size":548,"mtime":1611769335382,"results":"16","hashOfConfig":"17"},{"size":2814,"mtime":1612011110239,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":1868,"mtime":1611849487493,"results":"20","hashOfConfig":"17"},{"size":1689,"mtime":1611850476193,"results":"21","hashOfConfig":"17"},{"size":1728,"mtime":1611850546285,"results":"22","hashOfConfig":"17"},{"size":1912,"mtime":1611850604804,"results":"23","hashOfConfig":"17"},{"size":1702,"mtime":1611850694924,"results":"24","hashOfConfig":"17"},{"size":1787,"mtime":1611850731268,"results":"25","hashOfConfig":"17"},{"size":963,"mtime":1611850769346,"results":"26","hashOfConfig":"17"},{"size":1594,"mtime":1611849666345,"results":"27","hashOfConfig":"17"},{"size":722,"mtime":1612011144806,"results":"28","hashOfConfig":"17"},{"size":484,"mtime":1612011228494,"results":"29","hashOfConfig":"17"},{"size":1436,"mtime":1611850361503,"results":"30","hashOfConfig":"17"},{"size":2057,"mtime":1612010787973,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l0ucsq",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"D:\\My Projects\\finex-gateway\\src\\index.js",[],"D:\\My Projects\\finex-gateway\\src\\App.js",[],"D:\\My Projects\\finex-gateway\\src\\reportWebVitals.js",[],"D:\\My Projects\\finex-gateway\\src\\pages\\PageOne.js",["70","71"],"import React from 'react';\r\nimport { useContext } from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../App';\r\nimport {\r\n      DropdownButton,\r\n      ButtonGroup,\r\n      Dropdown,\r\n      SplitButton,\r\n      Button,\r\n    } from \"react-bootstrap\";\r\n\r\nconst PageOne = () => {\r\n      const { country, setCountry } = useContext(UserContext);\r\n  const [currency, setCurrency] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://restcountries.eu/rest/v2/all\")\r\n      .then((res) => res.json())\r\n      .then((data) => setCurrency(data));\r\n  }, [country]);\r\n\r\n  const handleChange = (e) => {\r\n    setCountry(e);\r\n  };\r\n\r\n      return (\r\n            <div className=\"text-center container border my-5\">\r\n      <div className=\"container p-5\">\r\n        <h3>Stable coin gateway - BUY</h3>\r\n\r\n        <div className=\"my-5\">\r\n          <SplitButton\r\n            key={\"down\"}\r\n            id={`dropdown-button-drop-${\"down\"}`}\r\n            drop={\"down\"}\r\n            variant=\"primary\"\r\n            title={country || \"Select Your Coin\"}\r\n          >\r\n            {currency.map((cr) => (\r\n              <Dropdown.Item onSelect={handleChange} eventKey={cr.name}>\r\n                {cr.name} - ( {cr.currencies[0].code})\r\n              </Dropdown.Item>\r\n            ))}\r\n          </SplitButton>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"quantity\">\r\n            <input type=\"number\" placeholder=\"Quantity\" />\r\n          </label>\r\n        </div>\r\n        <div className=\"mt-5\">\r\n          <h3>Total Cost @Price AOA/TAOA</h3>\r\n        </div>\r\n        <Link to=\"/page2\">\r\n          <Button variant=\"danger\" className=\"px-5 mt-5 text-center\">\r\n            Next\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n      );\r\n};\r\n\r\nexport default PageOne;",["72","73"],"D:\\My Projects\\finex-gateway\\src\\pages\\PageTwo.js",["74","75"],"import React, { useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../App';\r\nimport WAValidator from \"wallet-address-validator\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n\r\n\r\nconst PageTwo = () => {\r\n      const [wallet, setWallet] = useState(\"\");\r\n  const { finalWallet, setFinalWallet } = useContext(UserContext);\r\n  let history = useHistory();\r\n\r\n  const isValid = () => {\r\n    const valid = WAValidator.validate(wallet, \"BTC\");\r\n    if (valid) {\r\n      alert(\"This is a valid address\");\r\n      history.push(\"/page3\");\r\n      setFinalWallet(wallet);\r\n    } else {\r\n      alert(\"Address INVALID\");\r\n    }\r\n  };\r\n\r\n      return (\r\n            <div className=\"text-center container border my-5\">\r\n      <div className=\"container p-5\">\r\n        <input\r\n          onBlur={(e) => setWallet(e.target.value)}\r\n          className=\"form-control mb-5\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your BSC wallet address\"\r\n        />\r\n        <h4>You will receive your TAOA in this address</h4>\r\n\r\n        <h4 className=\"text-danger mt-5\">\r\n          Pay close attention mistakes will make you loose all your assets and\r\n          there is nothing we can do to help\r\n        </h4>\r\n      </div>\r\n      <a\r\n        href=\"https://www.binance.org/en/smartChain\"\r\n        target=\"_blank\"\r\n        className=\"text-center\"\r\n      >\r\n        <h4 className=\"text-dark\">Don't have a BSC wallet yet?</h4>\r\n      </a>\r\n      <div className=\"text-center py-5\">\r\n        <Button variant=\"danger\" className=\"px-5\" onClick={isValid}>\r\n          Next\r\n        </Button>\r\n      </div>\r\n    </div>\r\n      );\r\n};\r\n\r\nexport default PageTwo;","D:\\My Projects\\finex-gateway\\src\\pages\\PageThree.js",["76","77","78"],"import React, { useState } from \"react\";\r\nimport {\r\n  DropdownButton,\r\n  ButtonGroup,\r\n  Dropdown,\r\n  SplitButton,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PageThree = () => {\r\nconst [selectedBank, setSelectedBank] = useState(\"Chose Your Bank\");\r\n\r\n  const handleChange = (e) => {\r\n    setSelectedBank(e);\r\n  };\r\n\r\n      return (\r\n            <div className=\"text-center container border my-5\">\r\n      <div className=\"container p-5\">\r\n        <div className=\"my-5\">\r\n          <SplitButton\r\n            key={\"down\"}\r\n            id={`dropdown-button-drop-${\"down\"}`}\r\n            drop={\"down\"}\r\n            variant=\"primary\"\r\n            title={selectedBank}\r\n          >\r\n            <Dropdown.Item onSelect={handleChange} eventKey={\"Bank1\"}>\r\n              Bank1\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onSelect={handleChange} eventKey={\"Bank2\"}>\r\n              Bank2\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onSelect={handleChange} eventKey={\"Bank3\"}>\r\n              Bank3\r\n            </Dropdown.Item>\r\n            \r\n          </SplitButton>\r\n        </div>\r\n        <h5 className=\"mb-5\">\r\n          Transfers between banks are usually faster. If available give\r\n          preference to your local bank and the system will automatically find\r\n          the best P2P for you.\r\n        </h5>\r\n        <a href=\"#\" className=\"ml-5\">\r\n          <h5 className = \"text-dark\">How long does it usually take?</h5>\r\n        </a>\r\n        <Link to=\"/page4\">\r\n          <Button variant=\"danger\" className=\"px-5 mt-5 text-center\">\r\n            Next\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n      );\r\n};\r\n\r\nexport default PageThree;","D:\\My Projects\\finex-gateway\\src\\pages\\PageFour.js",["79","80"],"import React, { useContext } from \"react\";\r\nimport { useId } from \"react-id-generator\";\r\nimport { UserContext } from \"../App\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction PageFour({ children, ...rest }) {\r\n      const [htmlId] = useId();\r\n      const { finalWallet, setFinalWallet } = useContext(UserContext);\r\n      const history = useHistory();\r\n    \r\n      const postBuy = () => {\r\n        const bulkData = { finalWallet, SwapId: htmlId, IBAN: \"XYZFJGFG456887\" };\r\n    \r\n        fetch(\"https://safe-cliffs-77291.herokuapp.com/buy\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify(bulkData),\r\n          headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\",\r\n          },\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            if (data) {\r\n              alert(\"Successfully posted\");\r\n              history.push(\"/sell1\")\r\n            }\r\n          });\r\n      };\r\n      return (\r\n            <div className=\"text-center container border my-5\">\r\n      <div className=\"container p-5\">\r\n        <h4 className=\"my-5\">Transfers funds to the following account</h4>\r\n        <div className=\"my-5\">\r\n          <h3>IBAN: XYZFJGFG456887</h3>\r\n          <h3>Swap ID: {htmlId}</h3>\r\n        </div>\r\n        <h4>\r\n          As soon as the funds are received the transaction to your BSC wallet\r\n          will be made the following address.\r\n        </h4>\r\n        <h4 className=\"my-5 text-danger\">{finalWallet}</h4>\r\n        <a href=\"#\" className=\"text-center\">\r\n          <h4 className=\"text-dark\">Doubts? Discord or Telegram</h4>\r\n        </a>\r\n        <div className=\"text-center\">\r\n          <Button variant=\"danger\" className=\"px-5 mt-5 \" onClick={postBuy}>\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n      );\r\n};\r\n\r\nexport default PageFour;","D:\\My Projects\\finex-gateway\\src\\pages\\SellOne.js",["81","82"],"import React, { useContext} from \"react\";\r\nimport {\r\n  DropdownButton,\r\n  ButtonGroup,\r\n  Dropdown,\r\n  SplitButton,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../App\";\r\n\r\nfunction SellOne() {\r\n  const { token, setToken } = useContext(UserContext);\r\n  const handleChange = (e) => {\r\n    setToken(e);\r\n  };\r\n      return (\r\n            <div className=\" text-center container border my-5\">\r\n      <div className=\"container\">\r\n            <br/>\r\n        <h2> Stablecoin gateway - Sell</h2>\r\n        <br/>\r\n        <br/>\r\n        <SplitButton\r\n          key={\"down\"}\r\n          id={`dropdown-button-drop-${\"down\"}`}\r\n          drop={\"down\"}\r\n          variant=\"primary\"\r\n          title={token || \"Choose a token\"}\r\n        >\r\n          <Dropdown.Item onSelect={handleChange} eventKey={\"token1\"}>\r\n            token1\r\n          </Dropdown.Item>\r\n          <Dropdown.Item onSelect={handleChange} eventKey={\"token2\"}>\r\n            token2\r\n          </Dropdown.Item>\r\n          <Dropdown.Item onSelect={handleChange} eventKey={\"token3\"}>\r\n            token3\r\n          </Dropdown.Item>\r\n        </SplitButton>\r\n        <br/>\r\n        <br/>\r\n        <div>\r\n          <label htmlFor=\"quantity\">\r\n            <input type=\"number\" placeholder=\"Quantity\" />\r\n          </label>\r\n        </div>\r\n        <div className=\"mt-5\">\r\n          <h3>You will get X AOA @Preco AOA/TAOA</h3>\r\n        </div>\r\n        <Link to=\"/sell2\">\r\n          <Button variant=\"danger\" className=\"px-5 mt-5 text-center\">\r\n            Next\r\n          </Button>\r\n        </Link>\r\n        <br/>\r\n        <br/>\r\n      </div>\r\n    </div>\r\n      );\r\n};\r\n\r\nexport default SellOne;","D:\\My Projects\\finex-gateway\\src\\pages\\SellTwo.js",["83","84"],"import React, { useContext } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport WAValidator from \"wallet-address-validator\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../App\";\r\n\r\nfunction SellTwo() {\r\n  const [wallet, setWallet] = useState(\"\");\r\n  const { finalWalletSell, setFinalWalletSell } = useContext(UserContext);\r\n  let history = useHistory();\r\n\r\n  const isValid = () => {\r\n    const valid = WAValidator.validate(wallet, \"BTC\");\r\n    if (valid) {\r\n      alert(\"This is a valid address\");\r\n      history.push(\"/sell3\");\r\n      setFinalWalletSell(wallet);\r\n    } else {\r\n      alert(\"Address is not valid\");\r\n    }\r\n  };\r\n      return (\r\n            <div className=\"text-center container border my-5\">\r\n      <div className=\"container p-5\">\r\n        <input\r\n          onBlur={(e) => setWallet(e.target.value)}\r\n          className=\"form-control mb-5\"\r\n          type=\"text\"\r\n          placeholder=\"BSC wallet address\"\r\n        />\r\n\r\n        <h4 className=\"mt-5\">\r\n          If for some reason we can not proceed with your sale (Which is rare)\r\n          we will completely return your assets. Please provide a BSC valid\r\n          wallet address that you have access to. Pay close attention to not\r\n          input any incorrect information.\r\n        </h4>\r\n      </div>\r\n      <a\r\n        href=\"https://www.binance.org/en/smartChain\"\r\n        target=\"_blank\"\r\n        className=\"text-center\"\r\n      >\r\n        <h4 className=\"text-dark\">Don't have a BSC wallet yet?</h4>\r\n      </a>\r\n      <div className=\"text-center py-5\">\r\n        <Button variant=\"danger\" className=\"px-5\" onClick={isValid}>\r\n          Next\r\n        </Button>\r\n      </div>\r\n    </div>\r\n      );\r\n};\r\n\r\nexport default SellTwo;","D:\\My Projects\\finex-gateway\\src\\pages\\SellThree.js",["85","86"],"import React, { useContext } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../App\";\r\n\r\nfunction SellThree() {\r\n  let history = useHistory();\r\n  const { account, setAccount } = useContext(UserContext);\r\n      return (\r\n            <div className=\"text-center container border my-5\">\r\n      <div className=\"container p-5\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Enter Your IBAN account details to be credited\"\r\n          onBlur={(e) => setAccount(e.target.value)}\r\n        />\r\n        <div className=\"mt-5\">\r\n          <a href=\"#\">\r\n            <h4 className=\"text-dark\">Where can I find my IBAN</h4>\r\n          </a>\r\n          <Button variant=\"danger\" onClick={() => history.push(\"/sell4\")}>\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n      );\r\n};\r\n\r\nexport default SellThree;","D:\\My Projects\\finex-gateway\\src\\pages\\SellFour.js",[],"D:\\My Projects\\finex-gateway\\src\\pages\\LastPage.js",[],"D:\\My Projects\\finex-gateway\\src\\pages\\Header.js",[],"D:\\My Projects\\finex-gateway\\src\\pages\\Home.js",[],"D:\\My Projects\\finex-gateway\\src\\pages\\Footer.js",[],{"ruleId":"87","severity":1,"message":"88","line":8,"column":7,"nodeType":"89","messageId":"90","endLine":8,"endColumn":21},{"ruleId":"87","severity":1,"message":"91","line":9,"column":7,"nodeType":"89","messageId":"90","endLine":9,"endColumn":18},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"87","severity":1,"message":"96","line":11,"column":11,"nodeType":"89","messageId":"90","endLine":11,"endColumn":22},{"ruleId":"97","severity":1,"message":"98","line":41,"column":7,"nodeType":"99","endLine":45,"endColumn":8},{"ruleId":"87","severity":1,"message":"88","line":3,"column":3,"nodeType":"89","messageId":"90","endLine":3,"endColumn":17},{"ruleId":"87","severity":1,"message":"91","line":4,"column":3,"nodeType":"89","messageId":"90","endLine":4,"endColumn":14},{"ruleId":"100","severity":1,"message":"101","line":46,"column":9,"nodeType":"99","endLine":46,"endColumn":38},{"ruleId":"87","severity":1,"message":"102","line":9,"column":28,"nodeType":"89","messageId":"90","endLine":9,"endColumn":42},{"ruleId":"100","severity":1,"message":"101","line":43,"column":9,"nodeType":"99","endLine":43,"endColumn":45},{"ruleId":"87","severity":1,"message":"88","line":3,"column":3,"nodeType":"89","messageId":"90","endLine":3,"endColumn":17},{"ruleId":"87","severity":1,"message":"91","line":4,"column":3,"nodeType":"89","messageId":"90","endLine":4,"endColumn":14},{"ruleId":"87","severity":1,"message":"103","line":10,"column":11,"nodeType":"89","messageId":"90","endLine":10,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":40,"column":7,"nodeType":"99","endLine":44,"endColumn":8},{"ruleId":"87","severity":1,"message":"104","line":8,"column":11,"nodeType":"89","messageId":"90","endLine":8,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":19,"column":11,"nodeType":"99","endLine":19,"endColumn":23},"no-unused-vars","'DropdownButton' is defined but never used.","Identifier","unusedVar","'ButtonGroup' is defined but never used.","no-native-reassign",["105"],"no-negated-in-lhs",["106"],"'finalWallet' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setFinalWallet' is assigned a value but never used.","'finalWalletSell' is assigned a value but never used.","'account' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]